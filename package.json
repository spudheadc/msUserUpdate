{
  "name": "ms-user-update",
  "version": "0.0.0",
  "private": true,
  "description": "Description for msUserUpdate",
  "license": "UNLICENSED",
  "scripts": {
    "app:start": "./gradlew",
    "backend:build-cache": "npm run backend:info && npm run backend:nohttp:test && npm run ci:e2e:package",
    "backend:doc:test": "./gradlew javadoc ",
    "backend:info": "./gradlew -v",
    "backend:nohttp:test": "./gradlew checkstyleNohttp ",
    "backend:start": "./gradlew ",
    "backend:unit:test": "./gradlew test integrationTest  -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.chapman.wattle.id.au.msuserupdate=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF",
    "ci:backend:test": "npm run backend:info && npm run backend:doc:test && npm run backend:nohttp:test && npm run backend:unit:test -- -P$npm_package_config_default_environment",
    "ci:e2e:package": "npm run java:$npm_package_config_packaging:$npm_package_config_default_environment -- -Pe2e -Denforcer.skip=true",
    "postci:e2e:package": "cp build/libs/*.$npm_package_config_packaging e2e.$npm_package_config_packaging",
    "ci:e2e:prepare": "npm run ci:e2e:prepare:docker",
    "ci:e2e:prepare:docker": "npm run docker:db:up && npm run docker:others:up && docker ps -a",
    "preci:e2e:server:start": "npm run docker:db:await --if-present && npm run docker:others:await --if-present",
    "ci:e2e:server:start": "java -jar e2e.$npm_package_config_packaging --spring.profiles.active=e2e,$npm_package_config_default_environment -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.chapman.wattle.id.au.msuserupdate=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF --logging.level.org.springframework.web=ERROR",
    "ci:e2e:teardown": "npm run ci:e2e:teardown:docker",
    "ci:e2e:teardown:docker": "npm run docker:db:down --if-present && npm run docker:others:down && docker ps -a",
    "docker:app:up": "docker-compose -f src/main/docker/app.yml up -d",
    "docker:db:down": "docker-compose -f src/main/docker/mongodb.yml down -v --remove-orphans",
    "docker:db:up": "docker-compose -f src/main/docker/mongodb.yml up -d",
    "docker:jhipster-registry:down": "docker-compose -f src/main/docker/jhipster-registry.yml down -v --remove-orphans",
    "docker:jhipster-registry:up": "docker-compose -f src/main/docker/jhipster-registry.yml up -d",
    "docker:kafka:down": "docker-compose -f src/main/docker/kafka.yml down -v --remove-orphans",
    "docker:kafka:up": "docker-compose -f src/main/docker/kafka.yml up -d",
    "docker:others:await": "echo \"Waiting for jhipster-registry to start\" && wait-on -t 180000 http-get://localhost:8761/management/health && echo \"jhipster-registry started\"",
    "docker:others:down": "npm run docker:kafka:down && npm run docker:redis:down && npm run docker:jhipster-registry:down",
    "predocker:others:up": "",
    "docker:others:up": "npm run docker:kafka:up && npm run docker:redis:up && npm run docker:jhipster-registry:up",
    "docker:redis:down": "docker-compose -f src/main/docker/redis.yml down -v --remove-orphans",
    "docker:redis:up": "docker-compose -f src/main/docker/redis.yml up -d",
    "java:docker": "./gradlew bootJar -Pprod jibDockerBuild",
    "java:docker:dev": "npm run java:docker -- -Pdev,webapp",
    "java:docker:prod": "npm run java:docker -- -Pprod",
    "java:jar": "./gradlew bootJar -x test -x integrationTest",
    "java:jar:dev": "npm run java:jar -- -Pdev,webapp",
    "java:jar:prod": "npm run java:jar -- -Pprod",
    "java:war": "./gradlew bootWar -Pwar -x test -x integrationTest",
    "java:war:dev": "npm run java:war -- -Pdev,webapp",
    "java:war:prod": "npm run java:war -- -Pprod",
    "prepare": "husky install",
    "prettier:check": "prettier --check \"{,src/**/}*.{md,json,yml,html,java}\"",
    "prettier:format": "prettier --write \"{,src/**/}*.{md,json,yml,html,java}\""
  },
  "config": {
    "backend_port": "8571",
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    },
    "default_environment": "prod",
    "packaging": "jar"
  },
  "dependencies": {
    "generator-jhipster-kafka": "^1.0.1"
  },
  "devDependencies": {
    "cz-conventional-changelog": "^3.3.0",
    "generator-jhipster": "7.7.0",
    "husky": "7.0.4",
    "lint-staged": "12.3.4",
    "prettier": "2.5.1",
    "prettier-plugin-java": "1.6.1",
    "prettier-plugin-packagejson": "2.2.15"
  },
  "engines": {
    "node": ">=16.14.0"
  },
  "cacheDirectories": [
    "node_modules"
  ]
}
